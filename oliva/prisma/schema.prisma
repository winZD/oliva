// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Orchard {
  id        String    @id @default(uuid())
  clerkId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  place     String
  size      String
  trees     Int
  note      String
  harvests  Harvest[]
}

model Harvest {
  id                 String             @id @default(uuid())
  clerkId            String
  year               DateTime
  quantity           Float
  position           String
  oil_percentage     Float
  orchardId          String? // Allow null to create Orchards without a Harvest initially
  orchard            Orchard?           @relation(fields: [orchardId], references: [id])
  expensesAndIncomes ExpenseAndIncome[]
}

model ExpenseAndIncome {
  id        String   @id @default(uuid())
  clerkId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  harvestId String
  harvest   Harvest? @relation(fields: [harvestId], references: [id])
  income    Float
  expense   Float
  note      String
}

//model HarvestsOnOrchards {
// harvest    Harvest  @relation(fields: [harvestId], references: [id])
// harvestId  String // relation scalar field (used in the `@relation` attribute above)
// orchard    Orchard  @relation(fields: [orchardId], references: [id])
// orchardId  String // relation scalar field (used in the `@relation` attribute above)
// assignedAt DateTime @default(now())

// @@id([harvestId, orchardId])
//}
