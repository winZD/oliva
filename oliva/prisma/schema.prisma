// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Orchard {
  id        String    @id @default(uuid())
  clerkId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  place     String
  size      String
  trees     Int
  note      String
  harvestId String? // Allow null to create Orchards without a Harvest initially
  harvest   Harvest?  @relation(fields: [harvestId], references: [id])
  expenses  Expense[]
}

model Expense {
  id        String   @id @default(uuid())
  clerkId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orchardId String // Foreign key to link Expense to Orchard
  orchard   Orchard? @relation(fields: [orchardId], references: [id])
  expense   Decimal
  note      String
}

model Harvest {
  id             String    @id @default(uuid())
  clerkId        String
  year           DateTime
  quantity       Float
  position       String
  oil_percentage Float
  orchards       Orchard[] // Many-to-many relationship
}

//model HarvestsOnOrchards {
// harvest    Harvest  @relation(fields: [harvestId], references: [id])
// harvestId  String // relation scalar field (used in the `@relation` attribute above)
// orchard    Orchard  @relation(fields: [orchardId], references: [id])
// orchardId  String // relation scalar field (used in the `@relation` attribute above)
// assignedAt DateTime @default(now())

// @@id([harvestId, orchardId])
//}
